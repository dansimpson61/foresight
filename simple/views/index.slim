doctype html
html
  head
    title Simple Foresight
    link rel="icon" type="image/svg+xml" href="/favicon.svg"
    style
      | body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; line-height: 1.6; color: #333; max-width: 1400px; margin: 2rem auto; padding: 0 1rem; background-color: #fdfdfd; }
      | h1, h2, h3 { color: #111; }
      | .results-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 2rem; margin-bottom: 2rem; }
      | .strategy-card { padding: 1.5rem; border: 1px solid #e0e0e0; border-radius: 8px; background-color: #fff; }
      | .strategy-card h2 { margin-top: 0; }
      | .metric { margin-bottom: 0.5rem; }
      | .metric-label { font-weight: bold; }
      | #chart-container { width: 100%; height: 400px; position: relative; }
      | .toggle { font-size: 0.9rem; font-weight: normal; color: #3b82f6; cursor: pointer; margin-left: 0.5rem; }
      | .toggle:hover { text-decoration: underline; }
      | .data-table { width: 100%; border-collapse: collapse; margin-top: 1rem; font-size: 0.9rem; }
      | .data-table.hidden { display: none; }
      | .data-table th, .data-table td { border: 1px solid #e0e0e0; padding: 0.5rem; text-align: right; }
      | .data-table th { background-color: #f8f8f8; font-weight: bold; }
      | .editor-section { margin-bottom: 2rem; }
      | .editor-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem; }
      | .editor-form { padding: 1.5rem; border: 1px solid #e0e0e0; border-radius: 8px; background-color: #fdfdfd; }
      | .editor-form.hidden { display: none; }
      | .form-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 1.5rem; }
      | .form-section { margin-bottom: 2rem; }
      | .form-section:last-child { margin-bottom: 0; }
      | .form-section h3 { margin-top: 0; margin-bottom: 1rem; font-size: 1.1rem; color: #555; border-bottom: 1px solid #e0e0e0; padding-bottom: 0.5rem; }
      | .form-group { display: flex; flex-direction: column; }
      | .form-group label { font-weight: 600; margin-bottom: 0.5rem; font-size: 0.9rem; color: #555; }
      | .form-group input, .form-group select { padding: 0.6rem; border: 1px solid #ccc; border-radius: 4px; font-size: 0.95rem; }
      | .form-group input:focus, .form-group select:focus { outline: none; border-color: #3b82f6; }
      | .form-help { font-size: 0.8rem; color: #6b7280; margin-top: 0.25rem; }
      | .button { background-color: #3b82f6; color: white; padding: 0.75rem 1.5rem; border: none; border-radius: 4px; cursor: pointer; font-size: 1rem; }
      | .button:hover { background-color: #2563eb; }
      | .button-secondary { background-color: #6b7280; }
      | .button-secondary:hover { background-color: #4b5563; }
      | hr { border: none; border-top: 1px solid #e0e0e0; margin: 2rem 0; }
      | .limitation-note { background-color: #fef3c7; border-left: 4px solid #f59e0b; padding: 1rem; margin: 1rem 0; border-radius: 4px; font-size: 0.9rem; }
      | .limitation-note strong { color: #92400e; }
  body
    header
      h1 Simple Foresight: A Radical Act of Simplification

    / Profile Editor
    div.editor-section data-controller="profile"
      div.editor-header
        h2 
          | Your Financial Profile
          span.toggle data-action="click->profile#toggleEditor" ✎ Edit
        
      form.editor-form.hidden data-profile-target="form"
        / Personal Information
        .form-section
          h3 Personal Information
          .form-grid
            .form-group
              label Social Security (Annual PIA)
              input type="number" data-profile-target="piaAnnual" value=profile[:income_sources].find{|s| s[:type] == :social_security}[:pia_annual]
              .form-help Primary Insurance Amount at full retirement age
            
            .form-group
              label SS Claiming Age
              input type="number" min="62" max="70" data-profile-target="claimingAge" value=profile[:income_sources].find{|s| s[:type] == :social_security}[:claiming_age]
              .form-help Age when you'll start collecting (62-70)

        / Tax & Household
        .form-section
          h3 Household & Expenses
          .form-grid
            .form-group
              label Annual Expenses
              input type="number" data-profile-target="annualExpenses" value=profile[:household][:annual_expenses]
              .form-help Your estimated annual spending needs
            
            .form-group
              label Filing Status
              select data-profile-target="filingStatus"
                option value="mfj" selected=(profile[:household][:filing_status] == 'mfj') Married Filing Jointly
                option value="single" selected=(profile[:household][:filing_status] == 'single') Single
              .form-help Tax filing status

        button.button type="button" data-action="click->profile#save" Save Profile & Update Results

    hr

    / Simulation Editor
    div.editor-section data-controller="simulation"
      div.editor-header
        h2 
          | Simulation Parameters
          span.toggle data-action="click->simulation#toggleEditor" ✎ Edit

      form.editor-form.hidden data-simulation-target="form"
        .form-section
          h3 Simulation Settings
          .form-grid
            .form-group
              label Years to Simulate
              input type="number" min="1" max="50" data-simulation-target="yearsToSimulate" value=profile[:years_to_simulate]
              .form-help How many years into the future (1-50)
            
            .form-group
              label Start Year
              input type="number" data-simulation-target="startYear" value=profile[:start_year]
              .form-help First year of simulation
            
            .form-group
              label Inflation Rate
              input type="number" step="0.001" data-simulation-target="inflationRate" value=profile[:inflation_rate]
              .form-help Annual inflation (e.g., 0.03 = 3%)

        .form-section
          h3 Growth Rate Assumptions
          .form-grid
            .form-group
              label Traditional IRA Growth
              input type="number" step="0.001" data-simulation-target="traditionalGrowth" value=profile[:growth_assumptions][:traditional]
              .form-help Annual return (e.g., 0.06 = 6%)
            
            .form-group
              label Roth IRA Growth
              input type="number" step="0.001" data-simulation-target="rothGrowth" value=profile[:growth_assumptions][:roth]
              .form-help Annual return (e.g., 0.06 = 6%)
            
            .form-group
              label Taxable Account Growth
              input type="number" step="0.001" data-simulation-target="taxableGrowth" value=profile[:growth_assumptions][:taxable]
              .form-help Annual return (e.g., 0.05 = 5%)
            
            .form-group
              label Cash Growth
              input type="number" step="0.001" data-simulation-target="cashGrowth" value=profile[:growth_assumptions][:cash]
              .form-help Annual return (e.g., 0.01 = 1%)

        .form-section
          h3 Conversion Strategy
          .form-grid
            .form-group
              label Strategy
              select data-simulation-target="strategy"
                option value="do_nothing" Do Nothing (No Conversions)
                option value="fill_to_bracket" selected Fill to Tax Bracket
              .form-help Which conversion strategy to test
            
            .form-group
              label Target Tax Bracket Ceiling
              input type="number" data-simulation-target="bracketCeiling" value="94300"
              .form-help Convert up to this taxable income level

        button.button type="button" data-action="click->simulation#save" Apply Settings & Re-run

    / Limitations Notice
    .limitation-note
      strong Note on Tax Calculations:
      |  This tool uses simplified tax calculations. 
      | Capital gains stacking is approximate. Roth conversions may affect Social Security taxation beyond what's shown. 
      | State taxes are not included. These results are for planning purposes only—consult a tax professional for precise calculations.

    hr

    / Results Display
    .results-grid
      .strategy-card
        h2 Do Nothing Strategy
        .metric
          span.metric-label Cumulative Taxes Paid:
          span.metric-value = format_currency(do_nothing_results[:aggregate][:cumulative_taxes])
        .metric
          span.metric-label Ending Net Worth:
          span.metric-value = format_currency(do_nothing_results[:aggregate][:ending_net_worth])
        .metric
          span.metric-label Total Gross Income:
          span.metric-value = format_currency(do_nothing_results[:aggregate][:total_gross_income])
        .metric
          span.metric-label Total Expenses:
          span.metric-value = format_currency(do_nothing_results[:aggregate][:total_expenses])

      .strategy-card
        h2 Fill to Bracket Strategy
        .metric
          span.metric-label Cumulative Taxes Paid:
          span.metric-value = format_currency(fill_bracket_results[:aggregate][:cumulative_taxes])
        .metric
          span.metric-label Ending Net Worth:
          span.metric-value = format_currency(fill_bracket_results[:aggregate][:ending_net_worth])
        .metric
          span.metric-label Total Gross Income:
          span.metric-value = format_currency(fill_bracket_results[:aggregate][:total_gross_income])
        .metric
          span.metric-label Total Expenses:
          span.metric-value = format_currency(fill_bracket_results[:aggregate][:total_expenses])

    / Chart Visualization
    div data-controller="chart"
      h2
        | Annual Income & Tax Details
        span.toggle data-action="click->chart#toggle" (Show Table)
      
      #chart-container
        canvas data-chart-target="canvas"

      / Data table (hidden by default)
      table.data-table.hidden data-chart-target="table"
        thead
          tr
            th Year
            th Age
            th Total Gross Income
            th Total Tax
            th Ending Net Worth
        tbody
          - fill_bracket_results[:yearly].each do |row|
            tr
              td = row[:year]
              td = row[:age]
              td = format_currency(row[:total_gross_income])
              td = format_currency(row[:total_tax])
              td = format_currency(row[:ending_net_worth])

    / Embed data for JavaScript
    script id="simulation-data" type="application/json"
      == { do_nothing: do_nothing_results[:yearly], fill_bracket: fill_bracket_results[:yearly] }.to_json

    script id="default-profile-data" type="application/json"
      == profile.to_json

    / Load Chart.js, Stimulus, controllers, and application
    - base = request.script_name
    script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.0/chart.umd.min.js"
    script src="#{base}/js/stimulus.umd.js"
    script src="#{base}/js/chart_controller.js"
    script src="#{base}/js/profile_controller.js"
    script src="#{base}/js/simulation_controller.js"
    script src="#{base}/js/application.js" Date of Birth
              input type="date" data-profile-target="dateOfBirth" value=profile[:members][0][:date_of_birth]
              .form-help Current age: #{Time.now.year - Date.parse(profile[:members][0][:date_of_birth]).year}

        / Account Balances
        .form-section
          h3 Account Balances
          .form-grid
            .form-group
              label Traditional IRA Balance
              input type="number" data-profile-target="traditionalBalance" value=profile[:accounts].find{|a| a[:type] == :traditional}[:balance]
              .form-help Pre-tax retirement savings
            
            .form-group
              label Roth IRA Balance
              input type="number" data-profile-target="rothBalance" value=profile[:accounts].find{|a| a[:type] == :roth}[:balance]
              .form-help After-tax retirement savings
            
            .form-group
              label Taxable Account Balance
              input type="number" data-profile-target="taxableBalance" value=profile[:accounts].find{|a| a[:type] == :taxable}[:balance]
              .form-help Brokerage account
            
            .form-group
              label Cash/Emergency Fund
              input type="number" data-profile-target="cashBalance" value=profile[:accounts].find{|a| a[:type] == :cash}[:balance]
              .form-help Liquid savings

        / Income Sources
        .form-section
          h3 Income Sources
          .form-grid
            .form-group
              label