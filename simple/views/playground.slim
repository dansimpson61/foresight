/!
  This new playground demonstrates the "Expression over Specification" doctrine.
  Notice the simplicity:
  1. No more `push`, `offset`, or `nested` parameters. Layout is handled by CSS.
  2. The structure is natural HTML. Panels are siblings or children of other panels.
  3. The helpers are clean and expressive. They declare *what* a component is, not *how* it should behave.

doctype html
html
  head
    title Playground â€” Slim Pickins
    - base = request.script_name
    link rel="icon" type="image/svg+xml" href="#{base}/favicon.svg"
    / We will create a new CSS file for our 'slim-pickins' components
    link rel="stylesheet" href="#{base}/css/slim-pickins.css"
    link rel="stylesheet" href="#{base}/css/app.css"
  body
    / The page layout is now controlled by a simple CSS class.
    / This container will use Flexbox or Grid to manage its children.
    .sp-container
      / The main content area is just a sibling to the panel.
      / The `sp-content` class will ensure it grows and shrinks fluidly.
      main.sp-content#main
        h1 Playground
        p.muted This content will automatically and elegantly adapt when you open the panels.

      / Here is the new, expressive togglepanel.
      / It's a simple helper call. All the complexity is gone.
      == toggleleft label: "Tools", icon: "ðŸ§°" do
        p This is the primary tool panel. It contains other nested panels.

        / Nesting is now natural. This `toggletop` is a child of the `toggleleft` panel.
        / Its layout will be handled by CSS within its parent.
        == toggletop label: "Editors" do
          h3 Editor Panel
          p.muted Content for the editors would go here.

        / This is a sibling to the top panel, demonstrating natural flow.
        .sp-panel-content
          h3 Panel Content
          p This is the main content area of the left panel, sitting between the nested top and bottom panels.

        == togglebottom label: "Dev" do
          h3 Developer Panel
          p.muted Content for the developer helpers would go here.

    == render :slim, :'partials/_scripts'
    script
      |
        // The new controller will be tiny.
        // It will just toggle a class, and CSS will do the rest.
        // We will build this in the next step.